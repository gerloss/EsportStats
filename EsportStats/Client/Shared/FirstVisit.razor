@inject IJSRuntime JSRuntime


<div class="modal-wrapper @(isFirstVisit ? "show" : "hide")">
    <div id="modal">        
        <h4>Let's call this a 'Closed Alpha'</h4>

        <hr />

        <p class="lead text-flavor">Welcome, and thanks for checking in!</p>

        <p>
            This site started as my university thesis project, so it wasn't really designed with a huge audience in mind.
            I still have a long way to go before this app could support a relatively large influx of concurrent visitors,
            and to be honest, the current server would probably just crash with more than a couple of users at the same time.
        </p>
        <p>Because of this, even if you like the site, <b>I'd like to ask you to not share it on Reddit/Discord/and other places - <i>yet</i>!</b></p>

        <p>Thank you for your understanding!</p>

        <p class="text-secondary">
            If you have any ides or suggestions you can message me at <i>gerloss#2134</i> on Discord.
        </p>        

        <hr />

        <div>
            <button @onclick="Dismiss" class="btn btn-primary">Got it!</button>
        </div>
    </div>
</div>


@code{

    private string firstVisitCookieName = "firstvisit";
    private bool isFirstVisit = false;    

    private async Task WriteCookie(string name, string value, int days)
    {
        await JSRuntime.InvokeVoidAsync("methods.WriteCookie", name, value, days);
    }

    private async Task<string> ReadCookie(string cname)
    {
        var ret = await JSRuntime.InvokeAsync<string>("methods.ReadCookie", cname);
        return ret;
    }

    protected override async Task OnInitializedAsync()
    {
        await ReadCookie(firstVisitCookieName);
        await UpdateFirstVisit();
    }

    private async Task Dismiss()
    {
        await WriteCookie(firstVisitCookieName, Boolean.FalseString, 1000);
        await UpdateFirstVisit();
    }

    private async Task UpdateFirstVisit()
    {
        var cstring = await ReadCookie(firstVisitCookieName);
        if (!Boolean.TryParse(cstring.ToLower(), out isFirstVisit))
        {
            isFirstVisit = true; // could not read cookie, must be first visit
        }
    }
}